<?xml version="1.0" encoding="UTF-8" ?>

<schema name="capitolwords" version="1.2">
  <types>

    <!-- Default numeric field types. For faster range queries, consider the
        tint/tfloat/tlong/tdouble types. 
    -->
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>

    <!-- The format for this date field must be 1995-12-31T23:59:59Z, -->
   <fieldType name="date" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>

<!-- The StrField type is not analyzed, but indexed/stored verbatim.  
       - StrField and TextField support an optional compressThreshold which
       limits compression (if enabled in the derived fields) to values which
       exceed a certain size (in characters).
    -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

   <!-- General text field that splits on whitespace with some special
    delimiter handling for punctuation. has a custom stopword list and normalizes
    case -->

    <fieldType name="CRtext" class="solr.TextField" positionIncrementGap="1" >
        <analyzer>
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" 
                    generateNumberParts="1" catenateWords="0" catenateNumbers="0" 
                    catenateAll="0" splitOnCaseChange="0"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <!--
            <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
            //-->
        </analyzer>
    </fieldType>

    <!-- same as the above field except with a positionIncrementGap of 100 for
        multi-valued fields where we don't want distinct input fields to be
        concatenated together and inadvertently match a search query -->

    <fieldType name="CRtext_multivalued" class="solr.TextField" positionIncrementGap="100" >
        <analyzer>
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" 
                    generateNumberParts="1" catenateWords="0" catenateNumbers="0" 
                    catenateAll="0" splitOnCaseChange="0"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        </analyzer>
    </fieldType>

    <!-- same as above, but with stopwords. //-->
    <fieldType name="unigrams" class="solr.TextField" positionIncrementGap="1" >
        <analyzer>
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" 
                    generateNumberParts="1" catenateWords="0" catenateNumbers="0" 
                    catenateAll="0" splitOnCaseChange="0"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        </analyzer>
    </fieldType>

    <!-- same as above, but with stemming. //-->
    <fieldType name="unigrams_stemmed" class="solr.TextField" positionIncrementGap="1" >
        <analyzer>
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" 
                    generateNumberParts="1" catenateWords="0" catenateNumbers="0" 
                    catenateAll="0" splitOnCaseChange="0"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
            <filter class="solr.PorterStemFilterFactory"/>
        </analyzer>
    </fieldType>


   <!-- the ShingleFilterFactory produces n-grams. Note that stopwords are 
        removed. Ideally, we would have a stop list for n-grams. -->
    <fieldType name="bigrams" class="solr.TextField" positionIncrementGap="1" >
        <!--
        <analyzer>
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" 
                    generateNumberParts="1" catenateWords="0" catenateNumbers="0" 
                    catenateAll="0" splitOnCaseChange="0"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.ShingleFilterFactory" 
                minShingleSize="2"
                maxShingleSize="2" 
                outputUnigrams="false" 
            />
       </analyzer>
        //-->
    </fieldType>
    <fieldType name="trigrams" class="solr.TextField" positionIncrementGap="1" >
        <!--
        <analyzer>
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" 
                    generateNumberParts="1" catenateWords="0" catenateNumbers="0" 
                    catenateAll="0" splitOnCaseChange="0"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.ShingleFilterFactory" 
                minShingleSize="3" 
                maxShingleSize="3" 
                outputUnigrams="false" 
            />
       </analyzer>
        //-->
    </fieldType>

    <fieldType name="quadgrams" class="solr.TextField" positionIncrementGap="1" >
        <!--
        <analyzer>
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" 
                    generateNumberParts="1" catenateWords="0" catenateNumbers="0" 
                    catenateAll="0" splitOnCaseChange="0"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.ShingleFilterFactory" 
                minShingleSize="4" 
                maxShingleSize="4" 
                outputUnigrams="false" 
            />
       </analyzer>
       //-->
    </fieldType>

    <fieldType name="pentagrams" class="solr.TextField" positionIncrementGap="1" >
        <!--
        <analyzer>
            <tokenizer class="solr.WhitespaceTokenizerFactory"/>
            <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" 
                    generateNumberParts="1" catenateWords="0" catenateNumbers="0" 
                    catenateAll="0" splitOnCaseChange="0"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.ShingleFilterFactory" 
                minShingleSize="5" 
                maxShingleSize="5" 
                outputUnigrams="false" 
            />
       </analyzer>
       //-->
    </fieldType>


     <!-- other options we may consider: indexing in reverse as well to support more
        efficient wildcard queries, adding more flexible matching for search including
        synonyms, word delimiters, and stemming-->

    <!-- since fields of this type are by default not stored or indexed,
         any data added to them will be ignored outright.  --> 
    <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" /> 

 </types>

 <fields>

   <field name="slug" type="string" indexed="true" stored="true" required="true" /> 
   <field name="congress" type="string" indexed="true" stored="true" required="true" /> 
   <field name="session" type="string" indexed="true" stored="true" required="true" /> 
   <field name="bill" type="string" indexed="true" stored="true" required="false" multiValued="true" />

   <field name="year" type="string" indexed="true" stored="true" required="true" /> 
   <field name="month" type="string" indexed="true" stored="true" required="true" /> 
   <field name="day" type="string" indexed="true" stored="true" required="true" /> 
   <field name="year_month" type="string" indexed="true" stored="true" required="true" /> 

   <field name="id" type="string" indexed="true" stored="true" required="true" /> 
   <field name="page_id" type="string" indexed="true" stored="true" required="true" /> 
   <field name="crdoc" type="string" indexed="true" stored="true" required="true" /> 
   <field name="volume" type="int" indexed="true" stored="true" required="true" /> 
   <field name="number" type="int" indexed="true" stored="true" required="true" /> 
   <field name="date" type="date" indexed="true" stored="true" required="true" /> 
   <field name="chamber" type="string" indexed="true" stored="false" required="true" /> 
   <field name="pages" type="string" indexed="true" stored="true" required="true" /> 
   <field name="document_title" type="CRtext" indexed="true" stored="true" required="false" /> 
   <field name="rollcall" type="CRtext" indexed="true" stored="true" required="false" /> 
    <!-- speaker info -->
   <field name="speaker_raw" type="string" indexed="false" stored="true" required="true" /> 
   <field name="speaker_state" type="string" indexed="true" stored="true" required="false" /> 
   <field name="speaker_party" type="string" indexed="true" stored="true" required="false" /> 
   <field name="speaker_bioguide" type="string" indexed="true" stored="true" required="false" /> 
   <field name="speaker_firstname" type="string" indexed="true" stored="true" required="false" /> 
   <field name="speaker_middlename" type="string" indexed="true" stored="true" required="false" /> 
   <field name="speaker_lastname" type="string" indexed="true" stored="true" required="false" /> 
   <field name="speaker_title" type="string" indexed="true" stored="true" required="false" /> 
   <field name="speaker_district" type="string" indexed="true" stored="true" required="false" /> 
     <!-- the dummy field has the same value in every document, and is used
        to anchor searches when we want to facet on "all" since wildcard
        searches for * are not allowed in solr -->
   <field name="dummy" type="CRtext" indexed="true" stored="false" required="false" multiValued="true"/> 
    <!-- multivalued fields -->
   <field name="title" type="CRtext" indexed="true" stored="true" required="false" multiValued="true" /> 
   <field name="speaking" type="CRtext" indexed="true" stored="true" required="false" multiValued="true"/> 
   <field name="quote" type="CRtext" indexed="true" stored="true" required="false" multiValued="true"/> 
   <field name="longquote" type="CRtext" indexed="true" stored="true" required="false" multiValued="true"/> 
    <!-- this is a destination for the copy field which stores the speaker
        first name, last name and bioguide ID to enable simpler searching
        speaker field has to be multi valued even though there is only one speaker per
        document because it is a copy field for multiple fields in the
        document -->
   <field name="speaker" type="CRtext_multivalued" indexed="true" stored="false" required="false" multiValued="true"/> 
    <!-- text is a copy field for both the speaking and quote fields. it is
        indexed as normal with stop words removed and case normalized-->
   <field name="text" type="CRtext" indexed="true" stored="false" required="false" multiValued="true"/> 
    <!-- ngrams is a field for ngrams to be indexed. ngrams is configurable but
        the field is defined to index up to n=5. -->
   <field name="unigrams" type="unigrams" indexed="true" stored="false" required="false" multiValued="true"/> 
   <field name="unigrams_stemmed" type="unigrams_stemmed" indexed="true" stored="false" required="false" multiValued="true"/> 
   <field name="bigrams" type="bigrams" indexed="true" stored="false" required="false" multiValued="true"/> 
   <field name="trigrams" type="trigrams" indexed="true" stored="false" required="false" multiValued="true"/> 
   <field name="quadgrams" type="quadgrams" indexed="true" stored="false" required="false" multiValued="true"/> 
   <field name="pentagrams" type="pentagrams" indexed="true" stored="false" required="false" multiValued="true"/> 
   <!--
    to be implemented...
   <field name="vote" type="" indexed="true" stored="true" required="false" multiValued="true"/> 
   <field name="time" type="" indexed="true" stored="true" required="false" multiValued="true"/> 
    -->
   
     <!--   A timestamp field with a default value of "NOW" to indicate when
        each document was indexed.  -->
    <field name="ingestdate" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>
    <field name="_version_" type="long" indexed="true" stored="true"/>
   
</fields>

 <!-- Field to use to determine and enforce document uniqueness. 
      Unless this field is marked with required="false", it will be a required field
   -->
 <uniqueKey>id</uniqueKey>

 <!-- field for the QueryParser to use when an explicit fieldname is absent -->
 <defaultSearchField>text</defaultSearchField>

 <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
 <solrQueryParser defaultOperator="OR"/>

  <!-- copyField commands copy one field to another at the time a document
        is added to the index.  It's used either to index the same field differently,
        or to add multiple fields to the same field for easier/faster searching.  -->
<copyField source="speaker_firstname" dest="speaker"/>
<copyField source="speaker_middlename" dest="speaker"/>
<copyField source="speaker_lastname" dest="speaker"/>
<copyField source="speaker_bioguide" dest="speaker"/>
<copyField source="speaker_title" dest="speaker"/>
<copyField source="speaking" dest="text"/>
<copyField source="quote" dest="text"/>
<copyField source="unigrams" dest="unigrams_stemmed"/>
<!--
<copyField source="speaking" dest="unigrams"/>
<copyField source="quote" dest="unigrams"/>
<copyField source="speaking" dest="unigrams_stemmed"/>
<copyField source="quote" dest="unigrams_stemmed"/>
<copyField source="speaking" dest="bigrams"/>
<copyField source="quote" dest="bigrams"/>
<copyField source="speaking" dest="trigrams"/>
<copyField source="quote" dest="trigrams"/>
<copyField source="speaking" dest="quadgrams"/>
<copyField source="quote" dest="quadgrams"/>
<copyField source="speaking" dest="pentagrams"/>
<copyField source="quote" dest="pentagrams"/>
//-->
</schema>
